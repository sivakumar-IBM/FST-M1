<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="76436467-1f2f-4229-9588-b0ab87337dc3" created="3.47.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="REST Github Project" resourceRoot="" projectVersion="" updated="3.47.0 2023-06-30T11:24:47Z" xmlns:con="http://eviware.com/soapui/config"><con:description>Test</con:description><con:settings/><con:interface xsi:type="con:RestService" id="3db6b4b7-0161-46d7-83ac-a2194aca899b" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://api.github.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings id="2380c73b-298f-4973-a650-41ed50f2194d"/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://api.github.com</con:endpoint></con:endpoints><con:resource name="Emails" path="/user/emails" id="28c303ad-b018-4856-958f-d6f7347e9b02"><con:settings/><con:parameters/><con:method name="Emails" id="ff2d4bd2-a445-4c27-a9c3-b5cb6eed1294" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="c4a601a4-6cee-4fb8-a08b-b9117262669b" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="Keys" path="/user/keys" id="2ab609eb-fb8c-4150-9eda-2d97d81a05be"><con:settings/><con:parameters/><con:method name="Keys" id="41ff6735-6646-471f-a691-c09543a941d2" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:keys="https://api.github.com/user/keys">keys:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e0f0dcb0-88ef-48e6-afd6-8d0985e69d89" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="KeyId" path="/user/keys/{keyId}" id="eb8998de-f775-40df-b425-48543b1b9981"><con:settings/><con:parameters/><con:method name="KeyId" id="875a63b2-6c35-4df6-a927-88589453977e" method="DELETE"><con:settings/><con:parameters><con:parameter required="true"><con:name>keyId</con:name><con:value>keyId</con:value><con:style>TEMPLATE</con:style><con:default>keyId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:ns="https://api.github.com/user/keys/84471483">ns:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="de16f714-91f9-4781-8b46-16b038682e34" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:parameters><con:entry key="keyId" value="keyId"/></con:parameters><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="610e63d1-05a9-4bac-bd4d-6af11d2c6781" name="https://api.github.com Test Suite"><con:settings id="fd216425-0895-4646-9333-6af34dcb6314"/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a481e1a4-23a0-4f3b-a09a-2c8b68033944" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test Case" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="getemailrequest" id="0c13d053-7ace-4f91-9586-a36188bf6c9e"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/emails" methodName="Emails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getemailrequest" id="c4a601a4-6cee-4fb8-a08b-b9117262669b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/emails</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="caf029eb-7581-4a1f-8b48-ee698a36ee7f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>API</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="postkeyrequest" id="9c26dc41-27c8-4bbd-96e8-3d26c67dcb5e"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys" methodName="Keys" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="postkeyrequest" id="e0f0dcb0-88ef-48e6-afd6-8d0985e69d89" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request>{
	"title":"TestKey",
	"key":"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPTZ2hsxeoUeNco/FlsThtvzIk5VdYXf8FrGHVGoNl5o"
}
</con:request><con:originalUri>https://api.github.com/user/keys</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ec6b3fec-8592-484b-a66a-deaab91b49c2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>API</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="e536c879-769f-45f9-a3d7-7711959f161a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>keyId_Transfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>postkeyrequest</con:sourceStep><con:sourcePath>$['id']</con:sourcePath><con:targetType>keyId</con:targetType><con:targetStep>deletekeyrequest</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="deletekeyrequest" id="f13e135a-c0db-4817-9552-dcbba6ef1435"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys/{keyId}" methodName="KeyId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deletekeyrequest" id="de16f714-91f9-4781-8b46-16b038682e34" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/keys/84471483</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a82c210d-b812-4132-b49f-1c7d9f8e06fa" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>API</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="keyId" value="84471543"/></con:parameters><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>API</con:name><con:type>OAuth 2.0</con:type><con:accessToken>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</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth2Profile></con:oAuth2ProfileContainer><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository><con:oAuth20AuthEntry><con:name>API</con:name><con:type>OAuth 2.0</con:type><con:accessToken>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</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth20AuthEntry></con:authRepository><con:tags/></con:soapui-project>